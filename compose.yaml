name: Fireguard
services: 
  api:
    container_name: "api-service"
    ports: 
      - "8080:8080"
      - "5272:5272"
    build: 
      dockerfile: Api/Api/Api/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Rabbit=${RABBIT_CONNECTION_STRING}
      - ASPNETCORE_URLS=http://+:8080;https://+:5272
      - ASPNETCORE_Kestrel__Certificates__Default__Password=secret
      - ASPNETCORE_Kestrel__Certificates__Default__Path=../https/fireguardcert.pfx
    volumes:
      - $USERPROFILE\.aspnet\https:/https/

  database: 
    container_name: "database-service"
    ports:
      - "5001:5001"
    build: 
      context: . 
      dockerfile: Database/Database/Dockerfile
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ConnectionStrings__Psql=${PSQL_CONNECTION_STRING}
      - ConnectionStrings__Rabbit=${RABBIT_CONNECTION_STRING}
      - ASPNETCORE_URLS=http://+:5000;https://+:5001
      - ASPNETCORE_Kestrel__Certificates__Default__Password=secret
      - ASPNETCORE_Kestrel__Certificates__Default__Path=../https/fireguardcert.pfx
    volumes:
      - $USERPROFILE\.aspnet\https:/https/
    depends_on:
      db:
        condition: service_started
  db:
    container_name: "psql-db"
    image: postgres
    restart: always
    ports: 
      - "5432:5432"
    environment:
      - POSTGRES_USERNAME=postgres
      - POSTGRES_PASSWORD=devpass
  rabbit:
    container_name: "rabbit-mq"
    image: bitnami/rabbitmq
    ports:
      - "5672:5672"
      - "15675:15672"
    environment:
      - "RABBITMQ_DEFAULT_PASS=guest"
      - "RABBITMQ_DEFAULT_USER=guest"
      - "RABBITMQ_MANAGEMENT_ALLOW_WEB_ACCESS=true"
  python:
    container_name: "python-risk-service"
    build:
      context: ./Python
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      MET_CLIENT_ID: ${MET_CLIENT_ID}
      MET_CLIENT_SECRET: ${MET_CLIENT_SECRET}

    
